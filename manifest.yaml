id: hello-world-fullstack
title: 'Hello World Full Stack'
version: 0.1.0
release-notes: |
  * Initial release
  * React frontend
  * Node.js backend with API
  * MongoDB database
license: mit
wrapper-repo: 'https://github.com/Start9Labs/hello-world-fullstack'
upstream-repo: 'https://github.com/Start9Labs/hello-world-fullstack'
support-site: 'https://github.com/Start9Labs/hello-world-fullstack/issues'
build: ['make']
description:
  short: A full-stack hello world application with React, Node.js, and MongoDB
  long: |
    This is a demonstration application showing how to package a full-stack web application for StartOS.
    It includes a React frontend, Node.js backend API, and MongoDB database all running in a single container.
    Perfect for learning how to create complex Start9 services.

assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md

main:
  type: docker
  image: main
  entrypoint: 'docker_entrypoint.sh'
  args: []
  mounts:
    main: /data
  gpu-acceleration: false
  shm-size-mb: 128

health-checks:
  main:
    name: 'Web Interface'
    success-message: 'Hello World is ready to use'
    type: docker
    image: main
    entrypoint: 'check-web.sh'
    args: []
    io-format: json
    inject: true

config: ~

properties: ~

volumes:
  main:
    type: data

interfaces:
  main:
    name: 'Web Interface'
    description: 'Main web interface for Hello World Full Stack (served by nginx)'
    tor-config:
      port-mapping:
        80: '80'
    lan-config:
      443:
        ssl: true
        internal: 80
    ui: true
    protocols:
      - tcp
      - http

dependencies: {}

backup:
  create:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - create
      - /mnt/backup
      - /data
    mounts:
      BACKUP: '/mnt/backup'
      main: '/data'
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /mnt/backup
      - /data
    mounts:
      BACKUP: '/mnt/backup'
      main: '/data'

actions: {}
