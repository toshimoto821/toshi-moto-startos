id: toshi-moto-startos
title: 'Toshi Moto'
version: 0.1.0
release-notes: |
  * Initial release for StartOS
  * React frontend
  * Node.js backend with API
  * MongoDB database
license: Apache-2.0
wrapper-repo: 'https://github.com/toshimoto821/toshi-moto-startos'
upstream-repo: 'https://github.com/toshimoto821/toshi-moto-startos'
support-site: 'https://github.com/toshimoto821/toshi-moto-startos/issues'
build: ['make']
description:
  short: Toshi Moto is a watch-only Bitcoin wallet designed for secure portfolio monitoring and transaction tracking.
  long: |
    Toshi Moto is a watch-only Bitcoin wallet designed for secure portfolio monitoring and transaction tracking.
    Key Features:
      - Import your extended public key (Xpub) to monitor multiple Bitcoin addresses simultaneously
      - Real-time balance aggregation across all your wallets and addresses
      - Comprehensive transaction history and monitoring capabilities
      - Privacy-focused: All data remains local to your browser - no sensitive information is transmitted to servers
      - Read-only security: Cannot spend or sign transactions, ensuring your funds remain safe
      
      Perfect for Bitcoin enthusiasts who want to monitor their holdings securely without compromising privacy or security.
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md

main:
  type: docker
  image: main
  entrypoint: 'docker_entrypoint.sh'
  args: []
  mounts:
    main: /data
  gpu-acceleration: false
  shm-size-mb: 128

health-checks:
  main:
    name: 'Web Interface'
    success-message: 'Toshi Moto is ready to use'
    type: docker
    image: main
    entrypoint: 'check-web.sh'
    args: []
    io-format: json
    inject: true

config: ~

properties: ~

volumes:
  main:
    type: data

interfaces:
  main:
    name: 'Web Interface'
    description: 'Main web interface for Toshi Moto (served by nginx)'
    tor-config:
      port-mapping:
        80: '80'
    lan-config:
      443:
        ssl: true
        internal: 80
    ui: true
    protocols:
      - tcp
      - http

dependencies: {}

backup:
  create:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - create
      - /mnt/backup
      - /data
    mounts:
      BACKUP: '/mnt/backup'
      main: '/data'
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /mnt/backup
      - /data
    mounts:
      BACKUP: '/mnt/backup'
      main: '/data'

actions: {}
